package main.java.Utils;

import main.java.nativeFunctions.TestBase;
import main.java.pageObjects.paymentSummary;

public class ViewPaymentsDataProvider extends paymentSummary {
	
	private TestBase testConfig;
	
	public ViewPaymentsDataProvider(TestBase testConfig) {
		super(testConfig);

	}


	public String getTinForFailedPayments()
	{
		String tin=null;
		return tin ;
	}
	
	
	public String getTinForRemitPayments()
	{
		String tin=null;
		return tin ;
	}
	
	
	public String getTinForPayments()
	{
		String tin=null;
		return tin ;
	}
	
	

	public String getTin(String testCase) {
		 		int sqlRowNo=0;
		 		
		 		switch(testCase) {
		 		case "getTinforFailedPayments": 
		 			sqlRowNo=23;
		 			break;
		 		case "getTinForPayerFilter":
		 			sqlRowNo=27;
		 			break;
		 		case "getTinforRemitPayments":
		 			sqlRowNo=23; //need to change after adding query
		 			break;
		 		
		 		}
		 		
		 		Map getTinNumber = DataBase.executeSelectQuery(testConfig,sqlRowNo, 1);
		 		System.out.println(getTinNumber.get("PROV_TAX_ID_NBR"));
		 		testConfig.putRunTimeProperty("tin", getTinNumber.get("PROV_TAX_ID_NBR").toString());
		 		return getTinNumber.get("PROV_TAX_ID_NBR").toString();
		 	}
		 	
		 	
		 	public void tinAssociation() {
		 		
		 		int sqlRowNo=26;
		 		int sqlRowNoInsertQuery=25;
		 		int isTinAssociated;
		 		
		 		Map tinAssociation = DataBase.executeSelectQuery(testConfig,sqlRowNo, 1);
		 		isTinAssociated=Integer.valueOf((String) tinAssociation.get("TIN_COUNT"));
		 		if(isTinAssociated == 0) {
		 			DataBase.executeInsertQuery(testConfig, sqlRowNoInsertQuery);
		 		}
		 	}
	
	
	
}
